# Написать программу сложения и умножения двух шестнадцатеричных чисел.
# При этом каждое число представляется как массив, элементы которого — цифры числа.
# Например, пользователь ввёл A2 и C4F.
# Нужно сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
# Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].
# [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F ]

import collections

# Создаем словарь и список шестнадцатеричных значений
dict_hex = { '0': 0, '1': 1, '2': 2, '3': 3,  '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9,
    'A': 10, 'B': 11, 'C': 12, 'D': 13,'E': 14, 'F': 15}
list_hex= ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A','B','C', 'D', 'E', 'F']

# Создаем очередь для первого и второго чисел
str_1 = input('Введите первое число ')
number_1 = collections.deque(str_1.upper())

str_2=input('Введите второе число ')
number_2 = collections.deque(str_2.upper())

answer = collections.deque()

# Это часть кода, чтобы в конце проверить правильное сложение
#-------------------------------------
n_1=int(str_1, 16)
n_2=int(str_2, 16)
check = n_1 + n_2
#--------------------------------------

# меняем очереди, чтобы самое длинное число всегда хранилось в number_1
if len(number_2)>len(number_1):
    number_2, number_1 = number_1, number_2

# Разворачиваем очереди, сложение чисел в столбик с конца, но цикл начнем с 0
number_2.reverse()
number_1.reverse()


next=0 # переменная для хранения разряда  "в уме "
for i in range(len(number_1)):
    if (i<len(number_2)): #проверяем, что есть еще что складывать
        # находим в словоре десятеричное число, соответствующие шестнадцатеричному и добавляем разряд "в уме"
        #  и присваиваем переменной temp
        temp = dict_hex[ number_1[i] ] + dict_hex[ number_2[i] ] + next
        if temp < 16:
            #добавляем в очередь шестнадцатеричный символ, который находим с помощью переменной temp в листе
            answer.appendleft( list_hex[temp] )
            next = 0
        else:
            answer.appendleft( list_hex[temp-16]   )
            next=1
    else:
        # если в одной из строк символы закончились, то остались еще разряды в другой и их тоже нужно добавить
        temp = dict_hex[number_1[i]] + next
        if temp < 16:
            answer.appendleft( list_hex[temp] )
            next = 0
        else:
            # может окахаться, что последняя сумма значений разрядов больше 16, тогда надо добавить еще разряд в ответ
            answer.appendleft( list_hex[temp-16]   )
            next=1
            answer.appendleft(list_hex[next])

#вывод ответа
print(answer)
#вывод проверки
print(hex(check))
